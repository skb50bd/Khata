@using Khata.Domain
@using Brotal.Extensions
@model IEnumerable<Deposit>

<table class="table table-sm table-hover table-striped">
    <thead>
        <tr class="table-success">
            <th colspan="3">
                DEPOSITS
            </th>
            <td class="text-right">
                <span class="badge badge-success">@(Model.Count())</span>
            </td>
        </tr>
        <tr>
            <th colspan="2">Sales</th>
            <td colspan="2" class="text-right">
                <span class="badge badge-dark">
                    @(Model.Count(d => d.TableName == nameof(Sale)))
                </span>
                @(Model.Where(d => d.TableName == nameof(Sale))
                       .Sum(d => d.Amount).ToString("C2"))
            </td>
        </tr>
        <tr>
            <th colspan="2">Debt Payments</th>
            <td colspan="2" class="text-right">
                <span class="badge badge-dark">
                    @(Model.Count(d => d.TableName == nameof(DebtPayment)))
                </span>
                @(Model.Where(d => d.TableName == nameof(DebtPayment))
                       .Sum(d => d.Amount).ToString("C2"))
            </td>
        </tr>
        <tr>
            <th colspan="2">Purchase Return</th>
            <td colspan="2" class="text-right">
                <span class="badge badge-dark">
                    @(Model.Count(d => d.TableName == nameof(PurchaseReturn)))
                </span>
                @(Model.Where(d => d.TableName == nameof(PurchaseReturn))
                       .Sum(d => d.Amount).ToString("C2"))
            </td>
        </tr>
        <tr><td colspan="4">&nbsp;</td></tr>
        <tr>
            <th colspan="2">Others</th>
            <td colspan="2" class="text-right">
                <span class="badge badge-dark">
                    @(Model.Count(d => d.TableName == nameof(Deposit)))
                </span>
                @(Model.Where(d => d.TableName == nameof(Deposit))
                       .Sum(d => d.Amount).ToString("C2"))
            </td>
        </tr>
        <tr class="table-active">
            <th colspan="2">Total</th>
            <td colspan="2" class="text-right">
                @(Model.Sum(d => d.Amount).ToString("C2"))
            </td>
        </tr>
        <tr class="thead-dark">
            <th>Id</th>
            <th>Type</th>
            <th class="text-right">Amount</th>
            <th class="text-right">Created At</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var d in Model)
        {
            string content;
            {
                content = "<table class=\"table table-sm\">"
                + "<tbody>" + (d.RowId is null ? "" : ("<tr>" + "<td><strong>Id</strong></td><td> " + @d.Id + "</td></tr>"))
                + "<tr><td><strong>Amount</strong></td><td> " + d.Amount + "</td></tr>"
                + "<tr><td><strong>Description</strong></td><td> " + d.Description + "</td></tr>"
                + "</tbody><strong></table>";
            }
            <tr class="js-clickable-row"
                data-href="@("../" + d.TableName + "s/Details?id=" + (d.RowId ?? d.Id))"
                data-toggle="popover"
                data-trigger="hover"
                data-html="true"
                data-placement="top"
                title="@d.TableName.FromPascalCase()"
                data-content="@content">

                <td>@d.RowId</td>
                <td>@d.TableName.FromPascalCase()</td>
                <td class="text-right">@(d.Amount.ToString("C2"))</td>
                <td class="text-right">@d.Metadata.ModifiedAt</td>
            </tr>
        }
    </tbody>
</table>