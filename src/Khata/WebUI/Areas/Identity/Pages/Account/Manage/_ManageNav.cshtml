@using Domain
@inject SignInManager<User> SignInManager
@inject UserManager<User> userManager;

@{
    var user = await userManager.GetUserAsync(User);

    var avatar =
        Url.Action(
            "Get",
            "Files",
            new { id = user.Avatar });

    var hasExternalLogins = 
        (await SignInManager.GetExternalAuthenticationSchemesAsync())
            .Any();
}

@if (User.Identity.IsAuthenticated
   && user?.Avatar?.Length > 0)
{
    <div class="m-3 text-center">
        <img src="@avatar"
             class="img-fluid img-thumbnail rounded-circle"
             alt="avatar"
             width="150">
    </div>}

<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
    @*@if (hasExternalLogins)
        {
            <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
        }
        <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>*@
    <li class="nav-item mt-5">
        <a class="nav-link btn btn-success"
           asp-page="../../Users/Index">
            <i class="fa fa-users"></i>
            Manage Users
        </a>
    </li>
</ul>
