@page "{outletId:int?}"
@using Business.PageFilterSort
@using WebUI.Pages.Components.Search
@model WebUI.Pages.Services.IndexModel

@{
    ViewData["Title"] = "Services";
    var outlet = Model.Outlets.FirstOrDefault(o => o.Id == Model.CurrentOutletId)?.Title;
}

<div class="row">
    <div class="col-md-6">
        @await Component.InvokeAsync(nameof(Search), new { model = Model.Pf })
    </div>
    <div class="col-md-6 text-right mb-3">
        <div class="dropdown text-right">
            <a class="btn btn-outline-secondary dropdown-toggle"
               href="#"
               role="button"
               id="dropdownMenuLink"
               data-toggle="dropdown"
               aria-haspopup="true"
               aria-expanded="false">
                Show Services for
            </a>

            <div class="dropdown-menu"
                 aria-labelledby="dropdownMenuLink">
                <a class="dropdown-item @(Model.CurrentOutletId == 0 ? "active": "")"
                   asp-page=""
                   asp-route-outletId="0">
                    All
                </a>
                @foreach (var o in Model.Outlets)
                {
                    <a class="dropdown-item @(Model.CurrentOutletId == o.Id ? "active": "")"
                       asp-page=""
                       asp-route-outletId="@o.Id">
                        @o.Title
                    </a>
                }
            </div>
            <a asp-page="Create" class="btn btn-primary">Create new</a>
        </div>
    </div>
</div>

<div>
    @await Component.InvokeAsync(
        nameof(Components.ServicesList.ServicesList), new { services = Model.Services })

    @await Component.InvokeAsync(
        nameof(WebUI.Pages.Components.Pagination),
        new { model = Model.Services.EmitPagination })
</div>
