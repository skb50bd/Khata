@using DTOs
@using static Domain.LineItemType
@model SaleDto
@{
    Layout = null;
}

<div class="row">
    <div class="col-lg-6">
        <table class="table table-sm table-borderless table-hover">
            <tr>
                <th>Sale#</th>
                <td>
                    <a asp-page="../Sales/Details"
                       asp-route-id="@Model.Id"
                       target="_blank">
                        @Html.DisplayFor(model => model.Id) - @Model.SaleDate.LocalDate()
                    </a>
                </td>
            </tr>
            <tr>
                <th>Invoice#</th>
                <td>
                    <a asp-page="../Invoices/Details"
                       asp-route-id="@Model.InvoiceId"
                       target="_blank">
                        @Html.DisplayFor(model => model.InvoiceId)
                    </a>
                </td>
            </tr>
            <tr>
                <th>Customer</th>
                <td>
                    <a asp-page="../Customers/Details"
                       asp-route-id="@Model.CustomerId"
                       target="_blank">
                        <input type="number"
                               value="@Html.ValueFor(model => model.CustomerId)"
                               id="CustomerId"
                               class="form-control"
                               hidden
                               disabled />
                        @Html.DisplayFor(model => model.CustomerId) - @Html.DisplayFor(model => model.Customer.FullName)
                    </a>
                </td>
            </tr>
            <tr>
                <th>Phone</th>
                <td>@Html.DisplayFor(model => model.Customer.Phone)</td>
            </tr>
            <tr>
                <th>Current Due</th>
                <td>
                    @Html.DisplayFor(model => model.Customer.Debt)
                    <input id="current-due"
                           type="number"
                           value="@Html.ValueFor(model => model.Customer.Debt)"
                           hidden
                           disabled />
                </td>
            </tr>
            <tr>
                <th>Total</th>
                <td>@Html.DisplayFor(model => model.PaymentTotal)</td>
            </tr>
            <tr>
                <th>Paid</th>
                <td>@Html.DisplayFor(model => model.PaymentPaid)</td>
            </tr>
            <tr>
                <th>Sale Due</th>
                <td>@Html.DisplayFor(model => model.PaymentDue)</td>
            </tr>
        </table>
    </div>

    <div class="col-lg-6">
        <h4>Cart</h4>
        <table class="table table-sm table-borderless table-hover">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Unit Price</th>
                    <th>Quantity</th>
                    <th>Net Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in Model.Cart.Where(i => i.Type == Product))
                {
                    <tr>
                        <td>@Html.DisplayFor(model => p.Name)</td>
                        <td>@Html.DisplayFor(model => p.UnitPrice)</td>
                        <td>@Html.DisplayFor(model => p.Quantity)</td>
                        <td>@Html.DisplayFor(model => p.NetPrice)</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>